Задание Keymaker.
Сложность алгоритма при решении "в лоб" O(n*n) - n дверей открываются/закрываются n раз
Сложность алгоритма в моем решении (при переключении дверей только с "квадратными" номерами) θ(sqrt(n))

Задание Football.
Сложность алгоритма в основном зависит от сложности функции get_unsorted_index
и равна O(n*log(n) + n) - сортировка + проход по массиву в поиске несовпадений

Задание white_walkers.
split_string - O(n)
find_symbol - O(n) на цикл и O(n) на срезы 
поскольку функция find_symbol вызывается в цикле, сложность всего алгоритма становится O(2*n*n)

Заание TransformTransform.
s_function - O(n * (n/2)**3 + n)
    Цикл по i - O(n) 
    Цикл по j - O(n/2)  // n/2 потому что количество 
    срез - O(n/2)       // элементов меняется от 1 до n 
    max - O(n/2)        // на каждой итерации по i
    retutn - O(n)
Сложность алгоритма - O( ((n**4)/8 + n)**2 )
Слишком высока сложнсть. Требуется оптимизация